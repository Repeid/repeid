apply plugin: 'eclipse'
apply plugin: 'idea'

apply from: "./libraries.gradle"

buildscript {
    apply from: "./libraries.gradle"

    repositories {
        maven { url "http://nexus.qmino.com/content/repositories/miredot" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:${sonarqube.version}"
        classpath "com.qmino:miredot-plugin:${miredot.version}"
        classpath "com.netflix.nebula:gradle-extra-configurations-plugin:${nebula.version}"
    }
}

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
}

subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: "java"

    apply plugin: "nebula.provided-base"

    group = project.group
    version = project.version

    sourceCompatibility = rootProject.sourceCompatibility
    targetCompatibility = rootProject.targetCompatibility

    // appropriately inject the common dependencies into each sub-project
    dependencies {
        compile libraries.jboss_logging

        provided libraries.jboss_logging_annotations

        testCompile(libraries.junit)
        testCompile(libraries.byteman)
        testCompile(libraries.byteman_install)
        testCompile(libraries.byteman_bmunit)

        testRuntime(libraries.log4j)
        testRuntime(libraries.javassist)
        testRuntime(libraries.woodstox)

        //Databases
        testRuntime(libraries.h2)
        testRuntime(libraries.hsqldb)
        testRuntime(libraries.postgresql)
        testRuntime(libraries.mysql)
        testRuntime(libraries.mariadb)
        testRuntime(libraries.informix)
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = expectedGradleVersion
}
